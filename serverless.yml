service: serverless-og-images-generator

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    BUCKET_NAME: dynobase-og-images
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:ListBucket'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            - Ref: ImagesCacheBucket
    - Effect: 'Allow'
      Action:
        - 's3:PutObject'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            - Ref: ImagesCacheBucket
            - '/*'

package:
  exclude:
    - layer/**
    - chrome-aws-lambda/**
    - node_modules/chrome-aws-lambda/**
  include:
    index.html

plugins:
  - serverless-apigw-binary
  - serverless-apigwy-binary

custom:
  apigwBinary:
    types:
      - '*/*'

functions:
  og-image-generator:
    handler: handler.index
    timeout: 30
    memorySize: 2048
    events:
      - http:
          method: GET
          path: /og-image
    layers:
      - { Ref: ChromeLambdaLayer }

layers:
  chrome:
    package:
      artifact: layer/chrome.zip    

resources:
  Resources:
    ImagesCacheBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: dynobase-og-images
        AccessControl: PublicRead
